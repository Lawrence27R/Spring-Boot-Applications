package com.aurionpro.jwt.security;

import javax.crypto.SecretKey;

import org.springframework.security.core.Authentication;
import org.springframework.stereotype.Component;

import io.jsonwebtoken.io.Decoders;
import io.jsonwebtoken.security.Keys;
import lombok.Value;

@Component
public class JwtTokenProvider {

	@Value
	private String jwtSecret;

	@Value
	private long jwtExpirationDate;

	public String generateToken(Authentication, authentication) {
		String username = authentication.getName();
		
		Date currentDate = new Date();
		
		Date expireDate = new Date(currentDate.getTime() + jwtExpirationDate);
		
		String token =  Jwts.builder().claims().subject(username).issuedAt(new Date(System.currentTimeMillis()))
	            .expiration(expireDate).and().signWith(key())
	            .claim("role", authentication.getAuthorities()).compact();
		
		return token;	
	}

	private SecretKey key() {

		return Keys.hmacShaKeyFor(Decoders.BASE64.decode(jwtSecret));
	}
}
