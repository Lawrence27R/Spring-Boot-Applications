package com.aurionpro.bankapp.controllers;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.aurionpro.bankapp.dto.CustomerAccountInfoDto;
import com.aurionpro.bankapp.entity.CustomerAccount;
import com.aurionpro.bankapp.entity.User;
import com.aurionpro.bankapp.service.AdminService;

@RestController
@RequestMapping("/bankApp")
public class AddCustomerBankAccountController {

    @Autowired
    private AdminService adminService;

    @GetMapping("/findCustomer")
    public ResponseEntity<?> findCustomerById(@RequestParam int customerId) {
        Optional<User> customer = adminService.findCustomerById(customerId);
        if (!customer.isPresent()) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Customer not found");
        }
        return ResponseEntity.ok(customer.get());
    }

    @PostMapping("/createAccount")
    public ResponseEntity<?> createAccountForCustomer(@RequestParam int customerId) {
        Optional<User> customer = adminService.findCustomerById(customerId);
        if (!customer.isPresent()) {
            return ResponseEntity.status(HttpStatus.NOT_FOUND).body("Customer not found");
        }
        CustomerAccount account = adminService.createAccountForCustomer(customer.get());
        return ResponseEntity.ok(account);
    }
    
    @GetMapping("/Customers")
    public ResponseEntity<List<CustomerAccountInfoDto>> getAllCustomerAccounts(
            @RequestParam(required = false) String firstname,
            @RequestParam(required = false) String lastname,
            @RequestParam(required = false) Long accountNumber) {

        List<CustomerAccountInfoDto> customers = adminService.getAllCustomerAccounts(firstname, lastname, accountNumber);
        return ResponseEntity.ok(customers);
    }

}
