package com.aurionpro.bankapp.security;

import java.util.Optional;
import java.util.Set;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.GrantedAuthority;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;
import org.springframework.stereotype.Service;

import com.aurionpro.bankapp.entity.User;
import com.aurionpro.bankapp.repository.UserRepository;

@Service
public class CustomUserDetialsService implements UserDetailsService {

    @Autowired
    private UserRepository userRepo;

    @Override
    public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
        // Find the user by email
        Optional<User> optionalUser = userRepo.findByEmailId(username);
        
        // Check if user exists
        if (!optionalUser.isPresent()) {
            throw new UsernameNotFoundException("User not found with email: " + username);
        }
        
        // Get the user object
        User user = optionalUser.get();
        
        // Convert user roles to GrantedAuthority
        Set<GrantedAuthority> authorities = user.getRole()
                                                .stream()
                                                .map(role -> new SimpleGrantedAuthority(role.getRolename()))
                                                .collect(Collectors.toSet());
        
        // Return UserDetails object
        return new org.springframework.security.core.userdetails.User(user.getEmailId(),
                                                                      user.getPassword(),
                                                                      authorities);
    }
}
