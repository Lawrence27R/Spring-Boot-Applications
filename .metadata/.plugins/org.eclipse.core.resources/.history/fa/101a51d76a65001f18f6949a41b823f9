package com.aurionpro.bankapp.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.aurionpro.bankapp.entity.Customer;
import com.aurionpro.bankapp.entity.CustomerAccount;
import com.aurionpro.bankapp.repository.CustomerAccountRepository;
import com.aurionpro.bankapp.repository.CustomerRepository;

@Service
public class AddCustomerBankAccountImpl implements AddCustomerBankAccount{
	
    @Autowired
    private CustomerRepository customerRepository;

    @Autowired
    private CustomerAccountRepository customerAccountRepository;

	@Override
	public Optional<Customer> findCustomerById(int customerId) {
		return customerRepository.findById(customerId);
	}

    @Override
    public CustomerAccount createAccountForCustomer(Customer customer) {
        CustomerAccount account = new CustomerAccount();
        
        long accountNumber;
        
        do {
            accountNumber = generateRandomAccountNumber();
        } while (customerAccountRepository.existsByAccountNumber(accountNumber));
        account.setAccountNumber(accountNumber);

        account.setCustomerBalance(5000);
        account.setCustomer(customer);

        return customerAccountRepository.save(account);
    }
    
    private long generateRandomAccountNumber() {
        // Prefix for account number
        final long PREFIX = 1050_0000; // Ensures numbers start with 1050 and have enough space for suffix

        // Generate a random suffix within a certain range
        long suffix = (long) (Math.random() * 10000); // Can be adjusted based on required length

        // Combine prefix and suffix to form the complete account number
        return PREFIX + suffix;
    }



}
