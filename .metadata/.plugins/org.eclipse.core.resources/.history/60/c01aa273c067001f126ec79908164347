package com.aurionpro.bankapp.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.aurionpro.bankapp.dto.CustomerDto;
import com.aurionpro.bankapp.dto.EditCustomerProfileDto;
import com.aurionpro.bankapp.entity.Admin;
import com.aurionpro.bankapp.entity.Customer;
import com.aurionpro.bankapp.mapper.CustomerMapper;
import com.aurionpro.bankapp.repository.AdminRepository;
import com.aurionpro.bankapp.repository.CustomerRepository;

@Service
public class CustomerServiceImpl implements CustomerService {
    
    @Autowired
    private CustomerRepository customerRepository;

    @Autowired
    private AdminRepository adminRepository;

    @Override
    public boolean addCustomer(CustomerDto customerDto) {
        Customer customer = CustomerMapper.toEntity(customerDto);

        Admin admin = adminRepository.findById(customerDto.getAdminId()).orElse(null);
        if (admin == null) {
            return false;
        }
        customer.setAdmin(admin); 
        if (customerRepository.findByEmailId(customer.getEmailId()).isPresent()) {
            return false; // Customer with the same email already exists
        }
        
        customerRepository.save(customer);
        return true;
    }

    @Override
    public Customer getCustomerById(int customerId) {
        return customerRepository.findById(customerId).orElse(null);
    }

    @Override
    public boolean updateCustomerProfile(int customerId, EditCustomerProfileDto request) {
        if (request == null) {
            return false; 
        }

        Customer existingCustomer = customerRepository.findById(customerId).orElse(null);
        if (existingCustomer == null) {
            return false; 
        }

        if (request.getFirstname() != null && !request.getFirstname().isEmpty()) {
            existingCustomer.setFirstname(request.getFirstname());
        }
        if (request.getLastname() != null && !request.getLastname().isEmpty()) {
            existingCustomer.setLastname(request.getLastname());
        }
        if (request.getEmailId() != null && !request.getEmailId().isEmpty()) {
            existingCustomer.setEmailId(request.getEmailId());
        }
        if (request.getCustomerPassword() != null && !request.getCustomerPassword().isEmpty()) {
            existingCustomer.setCustomerPassword(request.getCustomerPassword());
        }

        customerRepository.save(existingCustomer);
        return true;
    }

    
}
