package com.aurionpro.bankapp.service;

import java.util.Date;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.stereotype.Service;

import com.aurionpro.bankapp.dto.TransactionDto;
import com.aurionpro.bankapp.entity.Transaction;
import com.aurionpro.bankapp.repository.TransactionRepository;

@Service
public class TransactionServiceImpl implements TransactionService {

    @Autowired
    private TransactionRepository transactionRepository;
    
    @Override
    public Page<TransactionDto> getFilteredTransactions(Long accountNumber, Date startDate, Date endDate, String typeOfTransaction, Pageable pageable) {
        Page<Transaction> transactions = transactionRepository.findByAccount_AccountNumber(accountNumber, pageable);
        return transactions.map(this::filterAndConvertToDto(startDate, endDate, typeOfTransaction));
    }

    @Override
    public Page<TransactionDto> getAllTransactions(Long accountNumber, Date startDate, Date endDate, String typeOfTransaction, Pageable pageable) {
        Page<Transaction> transactions = transactionRepository.findAll(pageable);
        return transactions.map(this::filterAndConvertToDto(startDate, endDate, typeOfTransaction));
    }

    private TransactionDto filterAndConvertToDto(Transaction transaction, Date startDate, Date endDate, String typeOfTransaction) {
        boolean matchFound = true;

        if (startDate != null && transaction.getDate().before(startDate)) {
            matchFound = false;
        }

        if (endDate != null && transaction.getDate().after(endDate)) {
            matchFound = false;
        }

        if (typeOfTransaction != null && !transaction.getTypeOfTransaction().toString().equals(typeOfTransaction)) {
            matchFound = false;
        }

        return matchFound ? convertToDto(transaction) : null;
    }

    private TransactionDto convertToDto(Transaction transaction) {
        return new TransactionDto(
                transaction.getTransactionId(),
                transaction.getSenderAccount(),
                transaction.getReceiverAccount(),
                transaction.getTypeOfTransaction(),
                transaction.getAmount(),
                transaction.getDate()
        );
    }
}
