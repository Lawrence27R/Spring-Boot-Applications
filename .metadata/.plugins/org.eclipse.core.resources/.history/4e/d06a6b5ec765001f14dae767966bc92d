package com.aurionpro.bankapp.service;

import java.util.Date;
import java.util.List;
import java.util.stream.Collectors;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import com.aurionpro.bankapp.entity.Customer;
import com.aurionpro.bankapp.repository.CustomerAccountRepository;
import com.aurionpro.bankapp.repository.CustomerRepository;

@Service
public class GetAllCustomerServiceImpl implements GetAllCustomerService {

    @Autowired
    private CustomerRepository customerRepository;

    @Override
    public List<Customer> getAllCustomers() {
        return customerRepository.findAll();
    }

    @Override
    public List<Customer> getFilteredCustomers(String firstname, String lastname, Integer customerId) {
        List<Customer> customers = customerRepository.findAll();

        return customers.stream()
                .filter(customer -> (firstname == null || customer.getFirstname().equalsIgnoreCase(firstname)) &&
                                    (lastname == null || customer.getLastname().equalsIgnoreCase(lastname)) &&
                                    (id == null || customer.getCustomerId().equals(customerId)))
                .collect(Collectors.toList());
    }

    private boolean isRecentlyAdded(Customer customer) {
        // Define what 'recently added' means; here, we assume 'recently' means within the last 30 days
        Date thirtyDaysAgo = new Date(System.currentTimeMillis() - 30L * 24 * 60 * 60 * 1000);
        return customer.getCreationDate() != null && customer.getCreationDate().after(thirtyDaysAgo);
    }
}
