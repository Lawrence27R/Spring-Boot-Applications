package com.aurionpro.bankapp.entity;

import java.util.Date;
import jakarta.persistence.*;
import lombok.Data;
import lombok.NoArgsConstructor;

@Entity
@Table(name = "transactions")
@Data
@NoArgsConstructor
public class Transaction {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private int transactionId;
    
    @ManyToOne
    @JoinColumn(name = "senderAccountNumber", referencedColumnName = "accountNumber", nullable = false)
//    @NotNull(message = "Sender account is required")
    private CustomerAccount senderAccount;
    
    @ManyToOne
    @JoinColumn(name = "receiverAccountNumber", referencedColumnName = "accountNumber", nullable = false)
//    @NotNull(message = "Receiver account is required")
    private CustomerAccount receiverAccount;
    
    @Enumerated(EnumType.STRING)
//    @NotNull(message = "Transaction type is required")
    @Column(nullable = false)
    private TypeOfTransaction typeOfTransaction;
    
    @Column(nullable = false)
//    @NotNull(message = "Transaction amount is required")
//    @Positive(message = "Transaction amount must be greater than 0")
    private double amount;
    
    @Temporal(TemporalType.TIMESTAMP)
    @Column(nullable = false, updatable = false)
//    @PastOrPresent(message = "Transaction date cannot be in the future")
    private Date date;  
}
